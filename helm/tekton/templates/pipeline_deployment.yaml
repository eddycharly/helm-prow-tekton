apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/name: tekton-pipelines
  name: tekton-pipelines-controller
spec:
  replicas: {{ .Values.replicas.pipeline }}
  selector:
    matchLabels:
      app: tekton-pipelines-controller
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: 'false'
      labels:
        app: tekton-pipelines-controller
        app.kubernetes.io/component: controller
        app.kubernetes.io/name: tekton-pipelines
    spec:
      nodeSelector:
{{ toYaml .Values.nodeSelector.pipeline | indent 8 }}
      serviceAccountName: tekton-pipelines-controller
      containers:
        - name: tekton-pipelines-controller
          image: '{{ .Values.images.pipeline.repository }}:{{ .Values.images.pipeline.tag }}'
          args:
            - -logtostderr
            - -stderrthreshold
            - INFO
{{- range $key, $value := .Values.pipelineUtils }}
            - -{{ $key }}
            - '{{ $value.repository }}:{{ $value.tag }}'
{{- end }}
          env:
            - name: SYSTEM_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: CONFIG_LOGGING_NAME
              value: config-logging
            - name: CONFIG_OBSERVABILITY_NAME
              value: config-observability
            - name: METRICS_DOMAIN
              value: tekton.dev/pipeline
          volumeMounts:
            - mountPath: /etc/config-logging
              name: config-logging
      volumes:
        - name: config-logging
          configMap:
            name: config-logging
